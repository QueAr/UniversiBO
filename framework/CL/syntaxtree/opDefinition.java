//
// Generated by JTB 1.3.2
//

package syntaxtree;

/**
 * Grammar production:
 * f0 -> <DEF_OP>
 * f1 -> <O_BRACE>
 * f2 -> <OP>
 * f3 -> <LIST_SEP>
 * f4 -> <NUM>
 * f5 -> <LIST_SEP>
 * f6 -> <NUM>
 * f7 -> <C_BRACE>
 * f8 -> <IN>
 * f9 -> listaParam()
 * f10 -> <STOP>
 * f11 -> <OUT>
 * f12 -> listaParam()
 * f13 -> <STOP>
 * f14 -> <DEF>
 * f15 -> <NS>
 * f16 -> <VARIABILE>
 * f17 -> <NSLEFT>
 * f18 -> <NSRIGHT>
 * f19 -> <END>
 */
public class opDefinition implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public NodeToken f2;
   public NodeToken f3;
   public NodeToken f4;
   public NodeToken f5;
   public NodeToken f6;
   public NodeToken f7;
   public NodeToken f8;
   public listaParam f9;
   public NodeToken f10;
   public NodeToken f11;
   public listaParam f12;
   public NodeToken f13;
   public NodeToken f14;
   public NodeToken f15;
   public NodeToken f16;
   public NodeToken f17;
   public NodeToken f18;
   public NodeToken f19;

   public opDefinition(NodeToken n0, NodeToken n1, NodeToken n2, NodeToken n3, NodeToken n4, NodeToken n5, NodeToken n6, NodeToken n7, NodeToken n8, listaParam n9, NodeToken n10, NodeToken n11, listaParam n12, NodeToken n13, NodeToken n14, NodeToken n15, NodeToken n16, NodeToken n17, NodeToken n18, NodeToken n19) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
      f8 = n8;
      f9 = n9;
      f10 = n10;
      f11 = n11;
      f12 = n12;
      f13 = n13;
      f14 = n14;
      f15 = n15;
      f16 = n16;
      f17 = n17;
      f18 = n18;
      f19 = n19;
   }

   public opDefinition(NodeToken n0, NodeToken n1, NodeToken n2, listaParam n3, listaParam n4, NodeToken n5) {
      f0 = new NodeToken("OP");
      f1 = new NodeToken("(");
      f2 = n0;
      f3 = new NodeToken(",");
      f4 = n1;
      f5 = new NodeToken(",");
      f6 = n2;
      f7 = new NodeToken(")");
      f8 = new NodeToken("IN");
      f9 = n3;
      f10 = new NodeToken(";");
      f11 = new NodeToken("OUT");
      f12 = n4;
      f13 = new NodeToken(";");
      f14 = new NodeToken("DEF");
      f15 = new NodeToken("#");
      f16 = n5;
      f17 = new NodeToken("[");
      f18 = new NodeToken("]");
      f19 = new NodeToken(";");
   }

   public void accept(visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

