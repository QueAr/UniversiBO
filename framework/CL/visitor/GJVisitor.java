//
// Generated by JTB 1.3.2
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All GJ visitors must implement this interface.
 */

public interface GJVisitor<R,A> {

   //
   // GJ Auto class visitors
   //

   public R visit(NodeList n, A argu);
   public R visit(NodeListOptional n, A argu);
   public R visit(NodeOptional n, A argu);
   public R visit(NodeSequence n, A argu);
   public R visit(NodeToken n, A argu);

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> ( istruzione() )*
    */
   public R visit(start n, A argu);

   /**
    * f0 -> eventDefinition()
    *       | startDefinition()
    *       | opDefinition()
    */
   public R visit(istruzione n, A argu);

   /**
    * f0 -> <EVENT>
    * f1 -> <VARIABILE>
    * f2 -> <DEF>
    * f3 -> condition()
    * f4 -> <END>
    */
   public R visit(eventDefinition n, A argu);

   /**
    * f0 -> <STARTS>
    * f1 -> <WHEN>
    * f2 -> condition()
    * f3 -> ( <ENDS> <WHEN> condition() )?
    * f4 -> <END>
    */
   public R visit(startDefinition n, A argu);

   /**
    * f0 -> <DEF_OP>
    * f1 -> <O_BRACE>
    * f2 -> <OP>
    * f3 -> <LIST_SEP>
    * f4 -> <NUM>
    * f5 -> <LIST_SEP>
    * f6 -> <NUM>
    * f7 -> <C_BRACE>
    * f8 -> <IN>
    * f9 -> listaParam()
    * f10 -> <STOP>
    * f11 -> <OUT>
    * f12 -> listaParam()
    * f13 -> <STOP>
    * f14 -> <DEF>
    * f15 -> <NS>
    * f16 -> <VARIABILE>
    * f17 -> <NSLEFT>
    * f18 -> <NSRIGHT>
    * f19 -> <END>
    */
   public R visit(opDefinition n, A argu);

   /**
    * f0 -> <NOME>
    * f1 -> ( <OPEN> listaParam() <CLOSE> )?
    * f2 -> ( <STAR> )?
    * f3 -> ( <COMMA> <NOME> ( <OPEN> listaParam() <CLOSE> )? ( <STAR> )? )*
    */
   public R visit(listaParam n, A argu);

   /**
    * f0 -> term() ( <OP> term() )*
    *       | <OP> "(" condition() ( <LIST_SEP> condition() )* ( outputFilter() )? ")"
    */
   public R visit(condition n, A argu);

   /**
    * f0 -> <OUT>
    * f1 -> ( <OPEN> <CLOSE> )?
    * f2 -> listaParam()
    * f3 -> <STOP>
    */
   public R visit(outputFilter n, A argu);

   /**
    * f0 -> "{"
    * f1 -> condition()
    * f2 -> ( <LIST_SEP> condition() )*
    * f3 -> "}"
    */
   public R visit(lista n, A argu);

   /**
    * f0 -> <DOLLARO> <VARIABILE>
    *       | namespace()
    *       | elem()
    *       | "(" condition() ")"
    *       | <AT> <VARIABILE> ( <CALL> <VARIABILE> "(" ( condition() ( "," condition() )* )? ")" )*
    *       | lista()
    */
   public R visit(term n, A argu);

   /**
    * f0 -> <NUM>
    *       | <TIME>
    *       | <STRINGA>
    */
   public R visit(elem n, A argu);

   /**
    * f0 -> <NS>
    * f1 -> <VARIABILE>
    * f2 -> <NSLEFT>
    * f3 -> <NSRIGHT>
    */
   public R visit(namespace n, A argu);

}
